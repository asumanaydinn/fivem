import { useSettings } from "../../../contexts/SettingsContext";
import { Status } from "../../../types/status";

interface StatusStyle1Props {
  status: Status;
}

const HealthIcon = () => (
  <svg
    className="absolute"
    width="13"
    height="12"
    viewBox="0 0 13 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1.12677 1.01094C2.29202 -0.194815 4.1841 -0.194815 5.34934 1.01094L6.14252 1.82719L6.93569 1.00808C8.10382 -0.197679 9.99302 -0.197679 11.1583 1.00808C12.4706 2.36276 12.4706 4.56233 11.1583 5.91701L6.14252 11.1038L1.12677 5.91988C-0.185568 4.56519 -0.185568 2.36562 1.12677 1.01094Z"
      fill="white"
    />
  </svg>
);

const HydrationIcon = () => (
  <svg
    width="13"
    className="absolute"
    height="17"
    viewBox="0 0 13 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.04205 16.2051C9.34205 16.2051 12.0421 13.5051 12.0421 10.2051C12.0421 6.90508 6.04205 0.205078 6.04205 0.205078C6.04205 0.205078 0.0420532 7.00508 0.0420532 10.2051C0.0420532 13.4051 2.74205 16.2051 6.04205 16.2051Z"
      fill="white"
    />
  </svg>
);
const EnergyIcon = () => (
  <svg
    className="absolute"
    width="12"
    height="16"
    viewBox="0 0 12 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M5.33263 16C5.24568 15.9999 5.15941 15.9851 5.07767 15.9564C4.92001 15.9004 4.78629 15.7947 4.69792 15.6562C4.60954 15.5178 4.57164 15.3546 4.59027 15.1927L5.16766 10.0364H0.75099C0.614763 10.0366 0.481054 10.0008 0.364223 9.93284C0.247392 9.8649 0.151853 9.76736 0.0878666 9.65072C0.0238801 9.53408 -0.00613595 9.40274 0.0010418 9.2708C0.00821955 9.13886 0.0523201 9.01131 0.128607 8.90185L6.04499 0.320069C6.13856 0.18577 6.27571 0.0856372 6.43466 0.035568C6.59361 -0.0145011 6.76525 -0.0116367 6.92233 0.0437068C7.07333 0.0980796 7.20227 0.198168 7.29006 0.329153C7.37784 0.460138 7.41981 0.615058 7.40973 0.770976L6.83234 5.96368H11.249C11.3852 5.96348 11.5189 5.99928 11.6358 6.06723C11.7526 6.13517 11.8481 6.2327 11.9121 6.34935C11.9761 6.46599 12.0061 6.59733 11.999 6.72927C11.9918 6.86121 11.9477 6.98876 11.8714 7.09822L5.95501 15.68C5.88622 15.7787 5.7935 15.8595 5.68497 15.9153C5.57645 15.9711 5.45545 16.0002 5.33263 16Z"
      fill="white"
    />
  </svg>
);

const HungryIcon = () => (
  <svg
    className="absolute"
    width="17"
    height="14"
    viewBox="0 0 17 14"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1.50494 5.21234C1.39739 5.09168 1.32089 4.95057 1.28105 4.79938C1.2412 4.64819 1.23904 4.49079 1.27472 4.33874C1.80429 2.05594 4.67097 0.398437 8.09216 0.398437C11.5134 0.398437 14.38 2.05594 14.9096 4.33874C14.9457 4.4909 14.9438 4.6485 14.9042 4.79992C14.8646 4.95133 14.7882 5.09271 14.6806 5.21361C14.5731 5.33451 14.4372 5.43185 14.2829 5.49845C14.1286 5.56506 13.9599 5.59923 13.7892 5.59844L2.39516 5.59844C2.22456 5.59891 2.05601 5.56446 1.90194 5.49764C1.74787 5.43082 1.61221 5.33332 1.50494 5.21234ZM15.3095 8.74964L12.3779 9.72464L9.73149 8.75549C9.59559 8.70594 9.44401 8.70594 9.30811 8.75549L6.67094 9.71814L4.02949 8.75549C3.89945 8.70811 3.75484 8.70603 3.62323 8.74964L0.487132 9.78964C0.354586 9.84284 0.249206 9.94005 0.192381 10.0615C0.135555 10.183 0.131542 10.3196 0.181157 10.4437C0.230771 10.5678 0.330295 10.67 0.459527 10.7296C0.58876 10.7892 0.738018 10.8017 0.877006 10.7646L1.81997 10.4533L1.81997 10.7984C1.81997 11.488 2.12034 12.1493 2.65501 12.6369C3.18968 13.1245 3.91484 13.3984 4.67097 13.3984L11.5134 13.3984C12.2695 13.3984 12.9947 13.1245 13.5293 12.6369C14.064 12.1493 14.3644 11.488 14.3644 10.7984L14.3644 10.1699L15.6993 9.72724C15.7742 9.70726 15.8438 9.67349 15.9037 9.62801C15.9637 9.58253 16.0128 9.52631 16.048 9.46284C16.0832 9.39936 16.1038 9.32998 16.1084 9.25897C16.113 9.18796 16.1016 9.11685 16.0749 9.05002C16.0481 8.98319 16.0067 8.92208 15.953 8.87045C15.8994 8.81883 15.8347 8.77779 15.7629 8.74988C15.6912 8.72196 15.6139 8.70777 15.5359 8.70818C15.4579 8.70859 15.3808 8.72358 15.3095 8.75224L15.3095 8.74964ZM0.679574 7.67844L15.5048 7.67844C15.656 7.67844 15.801 7.62365 15.9079 7.52613C16.0149 7.42861 16.075 7.29635 16.075 7.15844C16.075 7.02053 16.0149 6.88826 15.9079 6.79074C15.801 6.69322 15.656 6.63844 15.5048 6.63844L0.679574 6.63844C0.528348 6.63844 0.383316 6.69322 0.276382 6.79074C0.169449 6.88826 0.109375 7.02053 0.109375 7.15844C0.109375 7.29635 0.169449 7.42861 0.276382 7.52613C0.383316 7.62365 0.528348 7.67844 0.679574 7.67844Z"
      fill="white"
    />
  </svg>
);

const StressIcon = () => (
  <svg
    className="absolute"
    width="17"
    height="13"
    viewBox="0 0 17 13"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M14.4434 3.68507V3.44018C14.4427 2.90952 14.2654 2.39087 13.9338 1.94932C13.6023 1.50777 13.1312 1.16298 12.5797 0.958218C12.0282 0.75346 11.4209 0.697855 10.8339 0.798379C10.2469 0.898904 9.70649 1.15108 9.28038 1.52327C9.25518 1.54582 9.23525 1.57258 9.22176 1.602C9.20826 1.63142 9.20147 1.66293 9.20176 1.69469V7.12645C9.20189 7.1706 9.21547 7.2139 9.24105 7.25177C9.26664 7.28963 9.30328 7.32065 9.3471 7.34154C9.39092 7.36243 9.44028 7.37242 9.48997 7.37045C9.53966 7.36847 9.58782 7.35461 9.62936 7.33032C10.154 7.0317 10.7635 6.87161 11.3867 6.8687C11.531 6.86632 11.6708 6.9131 11.7774 6.99942C11.884 7.08573 11.9493 7.20503 11.9598 7.33277C11.9638 7.39922 11.9524 7.46569 11.9264 7.52811C11.9005 7.59054 11.8605 7.64761 11.8088 7.69585C11.7572 7.74409 11.695 7.78249 11.6261 7.80869C11.5572 7.8349 11.483 7.84837 11.4081 7.84827C10.8227 7.84827 10.2614 8.05469 9.84748 8.4221C9.43359 8.78951 9.20107 9.28783 9.20107 9.80743V11.8817C9.20101 11.9183 9.21021 11.9545 9.228 11.9876C9.24578 12.0206 9.2717 12.0497 9.30383 12.0727C9.69536 12.3603 10.1563 12.5639 10.6509 12.6677C11.1455 12.7715 11.6604 12.7726 12.1556 12.6709C12.6507 12.5693 13.1128 12.3676 13.5059 12.0817C13.899 11.7957 14.2125 11.4331 14.422 11.0221C14.4431 10.9808 14.4508 10.935 14.4444 10.89C14.4379 10.845 14.4175 10.8025 14.3853 10.7672C14.3532 10.7319 14.3107 10.7052 14.2625 10.6901C14.2143 10.675 14.1623 10.6721 14.1123 10.6817C13.7685 10.7517 13.4168 10.787 13.064 10.787H12.5309C12.3885 10.7886 12.2508 10.7423 12.1453 10.6575C12.0397 10.5727 11.9742 10.4556 11.9619 10.3297C11.9569 10.2627 11.9674 10.1955 11.9929 10.1323C12.0184 10.069 12.0582 10.0111 12.11 9.96216C12.1617 9.91319 12.2243 9.87418 12.2937 9.84756C12.3631 9.82094 12.438 9.80728 12.5136 9.80743H13.0654C13.6418 9.80821 14.2099 9.68467 14.7206 9.44743C15.3255 9.16779 15.828 8.74084 16.1692 8.21666C16.5104 7.69248 16.6762 7.0928 16.6471 6.48795C16.618 5.8831 16.3952 5.29816 16.0049 4.80171C15.6146 4.30527 15.0729 3.91792 14.4434 3.68507ZM13.6158 5.88912H13.3399C12.6814 5.88912 12.0499 5.65691 11.5842 5.24357C11.1186 4.83023 10.857 4.26962 10.857 3.68507V3.44018C10.857 3.31028 10.9151 3.1857 11.0186 3.09384C11.1221 3.00199 11.2624 2.95039 11.4088 2.95039C11.5551 2.95039 11.6954 3.00199 11.7989 3.09384C11.9024 3.1857 11.9605 3.31028 11.9605 3.44018V3.68507C11.9605 3.84587 11.9962 4.0051 12.0655 4.15366C12.1348 4.30222 12.2364 4.4372 12.3645 4.5509C12.6232 4.78054 12.974 4.90954 13.3399 4.90954H13.6158C13.7621 4.90954 13.9024 4.96114 14.0059 5.053C14.1094 5.14485 14.1675 5.26943 14.1675 5.39933C14.1675 5.52923 14.1094 5.65381 14.0059 5.74566C13.9024 5.83752 13.7621 5.88912 13.6158 5.88912ZM5.89126 0.746338C5.08671 0.747148 4.31537 1.03122 3.74646 1.53624C3.17756 2.04126 2.85755 2.72597 2.85664 3.44018V3.68507C2.22718 3.91804 1.6856 4.3055 1.29541 4.80201C0.905212 5.29852 0.682583 5.8835 0.653626 6.48835C0.624669 7.09319 0.790584 7.69283 1.13191 8.21694C1.47325 8.74104 1.97584 9.1679 2.58076 9.44743C3.09152 9.68467 3.65956 9.80821 4.23601 9.80743H4.76914C4.91172 9.80556 5.04981 9.85169 5.15563 9.93654C5.26145 10.0214 5.32715 10.1387 5.33951 10.2648C5.34452 10.3318 5.33396 10.399 5.30849 10.4622C5.28301 10.5254 5.24316 10.5833 5.19142 10.6323C5.13968 10.6813 5.07714 10.7203 5.0077 10.7469C4.93826 10.7735 4.8634 10.7872 4.78776 10.787H4.23601C3.88295 10.7871 3.53101 10.7516 3.187 10.6811C3.13707 10.6714 3.0851 10.6743 3.03689 10.6893C2.98867 10.7043 2.94609 10.7309 2.91391 10.7661C2.88173 10.8014 2.8612 10.8438 2.85462 10.8888C2.84804 10.9338 2.85566 10.9795 2.87664 11.0209C3.08612 11.432 3.39958 11.7947 3.79267 12.0808C4.18575 12.3669 4.64786 12.5687 5.14307 12.6704C5.63829 12.7722 6.15327 12.7712 6.64798 12.6675C7.1427 12.5638 7.60382 12.3603 7.99549 12.0727C8.02763 12.0497 8.05354 12.0206 8.07133 11.9876C8.08911 11.9545 8.09832 11.9183 8.09826 11.8817V9.80743C8.09826 9.28783 7.86574 8.78951 7.45184 8.4221C7.03795 8.05469 6.47659 7.84827 5.89126 7.84827C5.8163 7.84837 5.7421 7.8349 5.6732 7.80869C5.6043 7.78249 5.54214 7.74409 5.4905 7.69585C5.43887 7.64761 5.39885 7.59054 5.37289 7.52811C5.34693 7.46569 5.33557 7.39922 5.33951 7.33277C5.35007 7.20492 5.41546 7.08554 5.52222 6.9992C5.62897 6.91287 5.76895 6.86616 5.91333 6.8687C6.53655 6.87161 7.14601 7.0317 7.67065 7.33032C7.71219 7.35461 7.76036 7.36847 7.81005 7.37045C7.85973 7.37242 7.9091 7.36243 7.95292 7.34154C7.99674 7.32065 8.03338 7.28963 8.05896 7.25177C8.08455 7.2139 8.09813 7.1706 8.09826 7.12645V1.69469C8.0985 1.63041 8.07026 1.56862 8.01963 1.52265C7.45312 1.02504 6.68823 0.746054 5.89126 0.746338ZM6.44301 3.68507C6.44301 4.26962 6.18142 4.83023 5.71579 5.24357C5.25016 5.65691 4.61863 5.88912 3.96014 5.88912H3.68426C3.53793 5.88912 3.39759 5.83752 3.29411 5.74566C3.19064 5.65381 3.13251 5.52923 3.13251 5.39933C3.13251 5.26943 3.19064 5.14485 3.29411 5.053C3.39759 4.96114 3.53793 4.90954 3.68426 4.90954H3.96014C4.14128 4.90954 4.32065 4.87787 4.488 4.81633C4.65535 4.7548 4.80741 4.66461 4.9355 4.5509C5.06359 4.4372 5.16519 4.30222 5.23451 4.15366C5.30383 4.0051 5.33951 3.84587 5.33951 3.68507V3.44018C5.33951 3.31028 5.39764 3.1857 5.50111 3.09384C5.60459 3.00199 5.74493 2.95039 5.89126 2.95039C6.03759 2.95039 6.17793 3.00199 6.28141 3.09384C6.38488 3.1857 6.44301 3.31028 6.44301 3.44018V3.68507Z"
      fill="white"
    />
  </svg>
);

const ArmorIcon = () => (
  <svg
    className="absolute"
    width="13"
    height="15"
    viewBox="0 0 13 15"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M12.231 2.36785L11.9896 2.34757C9.24164 2.11304 6.40609 0.161435 6.37956 0.144062L6.23633 0.0427246L6.0931 0.144062C6.06656 0.161435 3.23102 2.11304 0.483015 2.34757L0.241643 2.36785L0.236333 2.63135C0.236333 2.70664 0.201848 10.1222 6.10105 13.9559L6.23633 14.0427L6.37161 13.9559C12.2708 10.1222 12.2363 2.70664 12.2363 2.63135L12.231 2.36785Z"
      fill="white"
    />
  </svg>
);

const StatusStyle1: React.FC<StatusStyle1Props> = ({ status }) => {
  const { settings } = useSettings();
  const maxStatusValue = 100;

  const healthHeight = `${(status.health / maxStatusValue) * 100}%`;
  const hydrationHeight = `${(status.hydration / maxStatusValue) * 100}%`;
  const hungryHeight = `${(status.hungry / maxStatusValue) * 100}%`;
  const energyHeight = `${(status.energy / maxStatusValue) * 100}%`;
  const armorHeight = `${(status.armor / maxStatusValue) * 100}%`;
  const stressHeight = `${(status.stress / maxStatusValue) * 100}%`;

  return (
    <div className="flex flex-col gap-y-2">
      <div className="flex gap-x-2 items-center">
        {(!settings.status.hideHealth ||
          status.health >
            settings.styleVisibility["1"].visibilityThresholds?.health) && (
          <div className="w-10 relative h-10 bg-[#010100] flex items-center justify-center">
            <div
              className="bg-[#E12E59] w-full absolute bottom-0"
              style={{ height: healthHeight }}
            ></div>
            <HealthIcon />
          </div>
        )}
        {(!settings.status.hideHydration ||
          status.hydration >
            settings.styleVisibility["1"].visibilityThresholds.hydration) && (
          <div className="w-10 relative h-10 bg-[#010100] flex items-center justify-center">
            <div
              className="bg-purple-600 w-full absolute bottom-0"
              style={{ height: hydrationHeight }}
            ></div>
            <HydrationIcon />
          </div>
        )}
        {(!settings.status.hideHungry ||
          status.hungry >
            settings.styleVisibility["1"].visibilityThresholds?.hunger) && (
          <div className="w-10 relative h-10 bg-[#010100] flex items-center justify-center">
            <div
              className="bg-[#DE2EE1] w-full absolute bottom-0"
              style={{ height: hungryHeight }}
            ></div>
            <HungryIcon />
          </div>
        )}
        {(!settings.status.hideEnergy ||
          status.energy >
            settings.styleVisibility["1"].visibilityThresholds?.energy) && (
          <div className="w-10 relative h-10 bg-[#010100] flex items-center justify-center">
            <div
              className="bg-[#E12E39] w-full absolute bottom-0"
              style={{ height: energyHeight }}
            ></div>
            <EnergyIcon />
          </div>
        )}
        {(!settings.status.hideStress ||
          status.stress >
            settings.styleVisibility["1"].visibilityThresholds?.stress) && (
          <div className="w-10 relative h-10 bg-[#010100] flex items-center justify-center">
            <div
              className="bg-[#E12E39] w-full absolute bottom-0"
              style={{ height: stressHeight }}
            ></div>
            <StressIcon />
          </div>
        )}
      </div>

      <div className="flex gap-x-2">
        {(!settings.status.hideHealth ||
          status.health >
            settings.styleVisibility["1"].visibilityThresholds?.health) && (
          <div className="w-24 h-8 bg-[#010100] relative flex items-center justify-center">
            <div
              className="h-8 absolute left-0 bg-[#1CB459] flex items-center justify-center"
              style={{ width: healthHeight }}
            ></div>
            <HealthIcon />
          </div>
        )}
        {(!settings.status.hideArmor ||
          status.armor >
            settings.styleVisibility["1"].visibilityThresholds?.armor) && (
          <div className="w-24 h-8 bg-[#010100] relative flex items-center justify-center">
            <div
              className="h-8 absolute left-0 bg-[#2E60E1] flex items-center justify-center"
              style={{ width: armorHeight }}
            ></div>
            <ArmorIcon />
          </div>
        )}
      </div>
    </div>
  );
};

export default StatusStyle1;
